# Generated by Django 4.2.15 on 2024-09-02 06:39

from django.db import migrations, models
import household.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HouseholdUsages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('electricity_consumption', models.FloatField(default=0, help_text='e.g., 1000', validators=[household.models.validate_min_energy])),
                ('share_of_renewable_energy', models.FloatField(default=0.0, help_text='e.g. 0.3 to represent 30%', validators=[household.models.validate_share_of_renewable_energy])),
                ('electricity_consumption_unit', models.CharField(choices=[('KWh', 'Kilowatt-hour')], default='KWh', max_length=3, validators=[household.models.validate_energy_unit])),
                ('natural_gas_consumption', models.FloatField(default=0, help_text='e.g., 1000', validators=[household.models.validate_min_energy])),
                ('natural_gas_consumption_unit', models.CharField(choices=[('KWh', 'Kilowatt-hour')], default='KWh', max_length=3, validators=[household.models.validate_energy_unit])),
                ('heating_oil_consumption', models.FloatField(default=0, help_text='e.g., 1000', validators=[household.models.validate_min_volume])),
                ('heating_oil_consumption_unit', models.CharField(choices=[('L', 'Liter')], default='L', max_length=2, validators=[household.models.validate_volume_unit])),
                ('water_consumption', models.FloatField(default=0, help_text='e.g., 1000', validators=[household.models.validate_min_volume])),
                ('water_consumption_unit', models.CharField(choices=[('L', 'Liter')], default='L', max_length=2, validators=[household.models.validate_volume_unit])),
                ('living_space', models.IntegerField(default=0, help_text='e.g., 1000', validators=[household.models.validate_min_area])),
                ('living_space_unit', models.CharField(choices=[('m2', 'Square meter')], default='m2', max_length=2, validators=[household.models.validate_area_unit])),
                ('waste_recycling', models.FloatField(default=0, help_text='e.g., 1000', validators=[household.models.validate_min_mass])),
                ('waste_recycling_unit', models.CharField(choices=[('Kg', 'Kilo-gram')], default='Kg', max_length=2, validators=[household.models.validate_mass_unit])),
                ('waste_incineration', models.FloatField(default=0, help_text='e.g., 1000', validators=[household.models.validate_min_mass])),
                ('waste_incineration_unit', models.CharField(choices=[('Kg', 'Kilo-gram')], default='Kg', max_length=2, validators=[household.models.validate_mass_unit])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('electricity_consumption_emission', models.FloatField(default=0)),
                ('electricity_consumption_emission_unit', models.CharField(choices=[('tCO2equ', 'Tons of Carbon Dioxide Equvalant')], default='tCO2equ', max_length=10)),
                ('renewable_energy', models.FloatField(default=0)),
                ('natural_gas_consumption_emission', models.FloatField(default=0)),
                ('natural_gas_consumption_emission_unit', models.CharField(choices=[('tCO2equ', 'Tons of Carbon Dioxide Equvalant')], default='tCO2equ', max_length=10)),
                ('heating_oil_consumption_emission', models.FloatField(default=0)),
                ('heating_oil_consumption_emission_unit', models.CharField(choices=[('tCO2equ', 'Tons of Carbon Dioxide Equvalant')], default='tCO2equ', max_length=10)),
                ('water_consumption_emission', models.FloatField(default=0)),
                ('water_consumption_emission_unit', models.CharField(choices=[('tCO2equ', 'Tons of Carbon Dioxide Equvalant')], default='tCO2equ', max_length=10)),
                ('living_space_emission', models.FloatField(default=0)),
                ('living_space_emission_unit', models.CharField(choices=[('tCO2equ', 'Tons of Carbon Dioxide Equvalant')], default='tCO2equ', max_length=10)),
                ('waste_recycling_emission', models.FloatField(default=0)),
                ('waste_recycling_emission_unit', models.CharField(choices=[('tCO2equ', 'Tons of Carbon Dioxide Equvalant')], default='tCO2equ', max_length=10)),
                ('waste_incineration_emission', models.FloatField(default=0)),
                ('waste_incineration_emission_unit', models.CharField(choices=[('tCO2equ', 'Tons of Carbon Dioxide Equvalant')], default='tCO2equ', max_length=10)),
                ('residential_footprint', models.FloatField(default=0)),
                ('residential_footprint_unit', models.CharField(choices=[('tCO2equ', 'Tons of Carbon Dioxide Equvalant')], default='tCO2equ', max_length=10)),
            ],
        ),
    ]
